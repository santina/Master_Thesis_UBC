setwd("~/Repos/santina_lin_demo_repo/homework")
library(limma)
NHBE_des <- read.table('homework_data/NHBE_design.txt')
NHBE_desM <- model.matrix(~Treatment, NHBE_des) # 1. Get the design matrix
NHBE_desM2 <- model.matrix(Treatment, NHBE_des) # 1. Get the design matrix
desM2 <- model.matrix(~Treatment*hours, NHBE_des)
NHBE_des$hours <- as.numeric(str_replace(NHBE_des$time, "_h", ""))
desM2 <- model.matrix(~Treatment*hours, NHBE_des)
library(stringr)
desM2 <- model.matrix(~Treatment*hours, NHBE_des)
NHBE_des$hours <- as.numeric(str_replace(NHBE_des$time, "_h", ""))
desM2 <- model.matrix(~Treatment*hours, NHBE_des)
desM2_2 <- model.matrix(Treatment*hours, NHBE_des)
library(limma)
?topTags
??topTags
library(edgeR)
?topTags
setwd("/projects/slin_prj/slin_prj_results/PubMed_Experiment/shallw_vs_deep/results")
random_papers_corrected <- read.table("precisions_wrandompapers_normalizedCorrected.txt")
colnames(random_papers_corrected) <- c("matrixType", "distFunc", "nsv", "precision")
random_papers_corrected$experiment <- factor("random_corrected")
head random_papers_corrected
head(random_papers_corrected)
closest_random <- rbind(random_papers, random_papers_corrected)
random_papers <- read.table("precisions_wrandompapers.txt")
colnames(random_papers) <- c("matrixType", "distFunc", "nsv", "precision")
random_papers$experiment <- factor("random")
closest_random <- rbind(random_papers, random_papers_corrected)
ggplot(closest_random, aes(x=nsv, y=precision)) +
geom_point(aes(colour=experiment)) +
scale_colour_manual(values=c("red", "#377eb8","#984ea3", "#ff7f00")) +
theme_bw() + ggtitle("Comparing different precisions") +
labs(x="Number of singular values",y="Average recall") +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1))
library(ggplot2)
ggplot(closest_random, aes(x=nsv, y=precision)) +
geom_point(aes(colour=experiment)) +
scale_colour_manual(values=c("red", "#377eb8","#984ea3", "#ff7f00")) +
theme_bw() + ggtitle("Comparing different precisions") +
labs(x="Number of singular values",y="Average recall") +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1))
