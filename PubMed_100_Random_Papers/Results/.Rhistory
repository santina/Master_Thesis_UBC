a <- 2
a
a  <- data.frame()
a
<-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-  <-
library(ggplo2)
library(ggplot2)
install.package("ggplot2")
install.packages("ggplot2")
?rbinom
rbinom(10, 1, 0.5)
rbinom(10, 1, 0.6)
rbinom(10, 1, 0.9)
rbinom(10, 2, 0.9)
rbinom(10, 2, 0.5)
unlist
?unlist
?apply
?combn
combn([1,2,3], 2)
combn((1,2,3), 2)
combn((1,2,3))
combn(c(1,2,3), 2)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
setwd("~/")
swirl()
library(swirl)
swirl()
install.packages("curl")
Sys.getenv("R_LIBS_USER")
library(ggplot2)
?lab
?labs
library(ggplot2)
library(plyr)
library(dplyr)
library(knitr) # kable()
setwd("/projects/slin_prj/slin_prj_results/PubMed_Experiment/random_100_pubmed/results")
prepare_data <- function(filepath){
data <- read.table(filepath)  # read in the file
colnames(data) <- c("ExperimentNum", "distFunc", "nsv", "precision", "seconds") # Set the column name
data$ExperimentNum <- as.factor(data$ExperimentNum) # Make sure experiment numbers are factors
data
}
term_frequency <- prepare_data("../multiple_instances/term_freq.gphost03.result")
term_binary <- prepare_data("../multiple_instances/term_binary.gphost03.result")
tf_idf <- prepare_data("../multiple_instances/tf_idf.gphost03.result")
tf_idf$matrixType <- factor("TF-IDF")
term_binary$matrixType <- factor("Binary")
term_frequency$matrixType <- factor("Frequency")
all_result <- rbind(tf_idf, term_binary, term_frequency)
str(all_result) # inspect final dataframe
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precisions") +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
create_curves(all_result, "Average recall on 100 PubMed abstracts' most similar abstracts ")
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precisions", size=2.0) +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
create_curves(all_result, "Average recall on 100 PubMed abstracts' most similar abstracts ")
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precisions", size=2.0) +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1))+
stat_summary(fun.y = mean, geom="line", size=1.5) +
theme(axis.text=element_text(size=12), xis.title=element_text(size=14,face="bold"))
}
create_curves(all_result, "Average recall on 100 PubMed abstracts' most similar abstracts ")
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precisions", size=2.0) +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1))+
stat_summary(fun.y = mean, geom="line", size=1.5) +
theme(axis.text=element_text(size=12), axis.title=element_text(size=14,face="bold"))
}
create_curves(all_result, "Average recall on 100 PubMed abstracts' most similar abstracts ")
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precisions", size=2.0) +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1), axis.text=element_text(size=12), axis.title=element_text(size=16))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
create_curves(all_result, "Average recall on 100 PubMed abstracts' most similar abstracts ")
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precisions", size=2.0) +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text=element_text(size=14))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
create_curves(all_result, "Average recall on 100 PubMed abstracts' most similar abstracts ")
?theme
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precisions", size=2.0) +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text=element_text(size=14),
legend.title=element_text(size=14))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
create_curves(all_result, "Average recall on 100 PubMed abstracts' most similar abstracts ")
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precisions", size=2.0) +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text=element_text(size=14),
legend.title=element_text(size=14),
strip.text.y=element_text(size=14))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
create_curves(all_result, "Average precisions on 100 PubMed abstracts' most similar abstracts ")
all_result_means <- ddply(all_result, c("distFunc", "matrixType", "nsv"), summarise,
precision = mean(precision), meanTime = mean(seconds))
maxima <- aggregate(precision ~ matrixType + distFunc, max, data=all_result_means)  # see maximum of all combinations
maxima <- merge(maxima, all_result_means[, c("matrixType", "nsv", "precision")], by=c("matrixType", "precision")) # bring in the number of nsv
maxima <- arrange(maxima, matrixType, distFunc)[, c(1,3,4,2)] # arrange the dataframe
max_mean <- aggregate(precision ~ matrixType + ExperimentNum + distFunc, max, data=all_result)  # see maximum of all combinations
ggplot(max_mean, aes(x=distFunc, y=precision, fill=distFunc)) + geom_boxplot(show.legend = FALSE) +
theme_bw() + facet_wrap(~matrixType) + labs(y="max precisions",x="distance function")
ggplot(max_mean, aes(x=distFunc, y=precision, fill=distFunc)) + geom_boxplot(show.legend = FALSE) +
theme_bw() + facet_wrap(~matrixType) + labs(y="max precisions",x="distance function") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
strip.text.x=element_text(size=14))
plot_boxplot <- function(data){
ggplot(data, aes(x=distFunc, y=precision, fill=distFunc)) + geom_boxplot(show.legend = FALSE) + theme_bw()
}
by(max_mean, max_mean$matrixType, plot_boxplot) # generate one plot at a time
max_mean_sd <- ddply(max_mean, c("matrixType", "distFunc"), summarise,
avg_max_precision = mean(precision), sd = sd(precision))
maxima_nsv <- merge(max_mean, all_result[, c("precision", "nsv")], by="precision") # bring in the number of nsv
ggplot(maxima_nsv, aes(x=distFunc, y=nsv, fill=distFunc)) + geom_boxplot(show.legend = FALSE) +
theme_bw() + facet_wrap(~matrixType) + labs(y="nsv at maxima precision",x="distance function")
ggplot(maxima_nsv, aes(x=distFunc, y=nsv, fill=distFunc)) + geom_boxplot(show.legend = FALSE) +
theme_bw() + facet_wrap(~matrixType) + labs(y="nsv at maxima precision",x="distance function") +
theme(axis.text=element_text(size=12),
axis.title=element_text(size=14),
strip.text.x=element_text(size=14))
ggplot(maxima_nsv, aes(x=distFunc, y=nsv, fill=distFunc)) + geom_boxplot(show.legend = FALSE) +
theme_bw() + facet_wrap(~matrixType) + labs(y="nsv at maxima precision",x="distance function") +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=14),
strip.text.x=element_text(size=14))
ggplot(maxima_nsv, aes(x=distFunc, y=nsv, fill=distFunc)) + geom_boxplot(show.legend = FALSE) +
theme_bw() + facet_wrap(~matrixType) + labs(y="nsv at maxima precision",x="distance function") +
theme(axis.text=element_text(size=14),
axis.title=element_text(size=16),
strip.text.x=element_text(size=14))
prepare_data <- function(filepath){
data <- read.table(filepath)  # read in the file
colnames(data) <- c("ExperimentNum", "distFunc", "nsv", "precision", "seconds") # Set the column name
data$ExperimentNum <- as.factor(data$ExperimentNum) # Make sure experiment numbers are factors
data
}
tf_idf <- prepare_data("../multiple_instances/tf_idf.gphost03.result")   # data from the other experiment in which matrices were scaled by square roots of singular values
tf_idf_nonsqrt <- prepare_data("../multiple_instances/tf_idf_nonsqrtsv.hugin.result") # same procedure but this time the matrix was scaled by singular values
tf_idf <- tf_idf[tf_idf$distFunc=="Cosine", ] # Keep only the ones using cosine function
str(tf_idf)
str(tf_idf_nonsqrt)
tf_idf$scaling <- factor("Squared Root")
tf_idf_nonsqrt$scaling <- factor("Non-squared")
data <- rbind(tf_idf, tf_idf_nonsqrt)
library(ggplot2)
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=scaling)) + geom_point(alpha=0.1) +
theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average recall") +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
create_curves(data, "Average recall on 100 PubMed abstracts' most similar abstracts ")
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=scaling)) + geom_point(alpha=0.1) +
theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average recall") +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1),
axis.text=element_text(size=12),
axis.title=element_text(size=14),
legend.text=element_text(size=14),
legend.title=element_text(size=14),
strip.text.y=element_text(size=14))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
create_curves(data, "Average recall on 100 PubMed abstracts' most similar abstracts ")
png("matrix_distfunc.png", width = 4, height = 4, units = 'in', res = 1000)
create_curves(all_result, "Average precisions on 100 PubMed abstracts' most similar abstracts ")
dev.off()
png("matrix_distfunc.png", res = 1000)
create_curves(all_result, "Average precisions on 100 PubMed abstracts' most similar abstracts ")
dev.off()
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precision") +
theme(plot.title = element_text(color="#666666", face="bold", size=14, hjust=0.5, vjust=1))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
my_plot <- create_curves(all_result, "Average precisions on 100 PubMed abstracts' most similar abstracts ")
ggsave(my_plot, file="matrix_distfunc.png", dpi = 600)
ggsave(my_plot, file="matrix_distfunc.png", dpi = 300)
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precision") +
theme(plot.title = element_text(color="#666666", face="bold", size=16, hjust=0.5, vjust=1),
legend.title = element_text(size=16),
legend.text = element_text(size=14),
axis.text = element.text(size=12),
axis.title = element.text(size=14))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
my_plot <- create_curves(all_result, "Average precisions on 100 PubMed abstracts' most similar abstracts ")
ggsave(my_plot, file="matrix_distfunc.png", dpi = 400)
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precision") +
theme(plot.title = element_text(color="#666666", face="bold", size=16, hjust=0.5, vjust=1),
legend.title = element_text(size=18),
legend.text = element_text(size=16),
axis.text = element.text(size=14),
axis.title = element.text(size=16))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
my_plot <- create_curves(all_result, "Average precisions on 100 PubMed abstracts' most similar abstracts ")
ggsave(my_plot, file="matrix_distfunc2.png", dpi = 400)
create_curves <- function(data, graphTitle){
ggplot(data, aes(x=nsv, y=precision, colour=distFunc)) + geom_point(alpha=0.1) +
facet_grid(matrixType ~ .) + theme_bw() + ggtitle(graphTitle) + scale_x_continuous(expand = c(0, 0), breaks=seq(0, 1500, by=100)) +
labs(x="Number of singular values",y="Average precision") +
theme(plot.title = element_text(color="#666666", face="bold", size=16, hjust=0.5, vjust=1),
legend.title = element_text(size=24),
legend.text = element_text(size=16),
axis.text = element.text(size=14),
axis.title = element.text(size=16))+
stat_summary(fun.y = mean, geom="line", size=1.5)
}
my_plot <- create_curves(all_result, "Average precisions on 100 PubMed abstracts' most similar abstracts ")
ggsave(my_plot, file="matrix_distfunc2.png", dpi = 400)
